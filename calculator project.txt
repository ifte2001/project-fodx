/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Calculator;

/**
 *
 * @author User
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }
    String num1="";
    String num2 ="";
    String op = "";
    String res = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JTextField();
        vardel = new javax.swing.JButton();
        var0 = new javax.swing.JButton();
        var1 = new javax.swing.JButton();
        var2 = new javax.swing.JButton();
        var3 = new javax.swing.JButton();
        var4 = new javax.swing.JButton();
        var7 = new javax.swing.JButton();
        var5 = new javax.swing.JButton();
        var6 = new javax.swing.JButton();
        var8 = new javax.swing.JButton();
        var9 = new javax.swing.JButton();
        vardot = new javax.swing.JButton();
        varequ = new javax.swing.JButton();
        varsqrt = new javax.swing.JButton();
        varmod = new javax.swing.JButton();
        vardiv = new javax.swing.JButton();
        varmul = new javax.swing.JButton();
        varsub = new javax.swing.JButton();
        varadd = new javax.swing.JButton();
        varpow = new javax.swing.JButton();
        varsin = new javax.swing.JButton();
        varcos = new javax.swing.JButton();
        vartan = new javax.swing.JButton();
        varclr = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        display.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        getContentPane().add(display, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 470, 70));

        vardel.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        vardel.setText("del");
        vardel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vardelActionPerformed(evt);
            }
        });
        getContentPane().add(vardel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, 80, 60));

        var0.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var0.setText("0");
        var0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var0ActionPerformed(evt);
            }
        });
        getContentPane().add(var0, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 60, 60));

        var1.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var1.setText("1");
        var1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var1ActionPerformed(evt);
            }
        });
        getContentPane().add(var1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 60, 60));

        var2.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var2.setText("2");
        var2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var2ActionPerformed(evt);
            }
        });
        getContentPane().add(var2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 60, 60));

        var3.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var3.setText("3");
        var3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var3ActionPerformed(evt);
            }
        });
        getContentPane().add(var3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 60, 60));

        var4.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var4.setText("4");
        var4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var4ActionPerformed(evt);
            }
        });
        getContentPane().add(var4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 60, 60));

        var7.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var7.setText("7");
        var7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var7ActionPerformed(evt);
            }
        });
        getContentPane().add(var7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 60, 60));

        var5.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var5.setText("5");
        var5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var5ActionPerformed(evt);
            }
        });
        getContentPane().add(var5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 60, 60));

        var6.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var6.setText("6");
        var6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var6ActionPerformed(evt);
            }
        });
        getContentPane().add(var6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 60, 60));

        var8.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var8.setText("8");
        var8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var8ActionPerformed(evt);
            }
        });
        getContentPane().add(var8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 60, 60));

        var9.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        var9.setText("9");
        var9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                var9ActionPerformed(evt);
            }
        });
        getContentPane().add(var9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 60, 60));

        vardot.setBackground(new java.awt.Color(255, 255, 253));
        vardot.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        vardot.setText(".");
        vardot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vardotActionPerformed(evt);
            }
        });
        getContentPane().add(vardot, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 60, 60));

        varequ.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varequ.setText("=");
        varequ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varequActionPerformed(evt);
            }
        });
        getContentPane().add(varequ, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 60, 60));

        varsqrt.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varsqrt.setText("âˆš");
        varsqrt.setAutoscrolls(true);
        varsqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varsqrtActionPerformed(evt);
            }
        });
        getContentPane().add(varsqrt, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 60, 60));

        varmod.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varmod.setText("%");
        varmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varmodActionPerformed(evt);
            }
        });
        getContentPane().add(varmod, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 60, 60));

        vardiv.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        vardiv.setText("/");
        vardiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vardivActionPerformed(evt);
            }
        });
        getContentPane().add(vardiv, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 60, 60));

        varmul.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varmul.setText("*");
        varmul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varmulActionPerformed(evt);
            }
        });
        getContentPane().add(varmul, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 60, 60));

        varsub.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varsub.setText("-");
        varsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varsubActionPerformed(evt);
            }
        });
        getContentPane().add(varsub, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 60, 60));

        varadd.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varadd.setText("+");
        varadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varaddActionPerformed(evt);
            }
        });
        getContentPane().add(varadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 60, 60));

        varpow.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varpow.setText("xÂ²");
        varpow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varpowActionPerformed(evt);
            }
        });
        getContentPane().add(varpow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 80, 60));

        varsin.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varsin.setText("sin");
        varsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varsinActionPerformed(evt);
            }
        });
        getContentPane().add(varsin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 80, 60));

        varcos.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varcos.setText("cos");
        varcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varcosActionPerformed(evt);
            }
        });
        getContentPane().add(varcos, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 80, 60));

        vartan.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        vartan.setText("tan");
        vartan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vartanActionPerformed(evt);
            }
        });
        getContentPane().add(vartan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 80, 60));

        varclr.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        varclr.setText("clr");
        varclr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varclrActionPerformed(evt);
            }
        });
        getContentPane().add(varclr, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 90, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnterNumber(String s) /// it will take input from the display for numbers as a string...
    {
        if(op.equals("Â²")==true)
        {
            if(num1.length()==0) num1 = s;
            else num1 = num1 + s;
            display.setText("(" +num1 + ")Â²");
            
        }
        else if(op.equals("sin")==true)
        {
            if(num1.length()==0) num1 = s;
            else num1 = num1 + s;
            display.setText(op + "(" +num1 + ")");
            
        }
        else if(op.equals("cos")==true)
        {
            if(num1.length()==0) num1 = s;
            else num1 = num1 + s;
            display.setText(op + "(" +num1 + ")");
            
        }
        else if(op.equals("tan")==true)
        {
            if(num1.length()==0) num1 = s;
            else num1 = num1 + s;
            display.setText(op + "(" +num1 + ")");
            
        }
        else if(op.equals("âˆš")==true)
        {
            if(num1.length()==0) num1 = s;
            else num1 = num1 + s;
            display.setText(op + num1);
            
        }
        else
        {
            if(op.length()==0)
            {
                if(num1.length()==0) num1 = s;
                else num1 = num1 + s;
                display.setText(num1);
            }
            else if(op.length()>0)
            {
                num2 = num2 + s;
                display.setText(num1+op+num2);
            }
        }
    }
    private void var3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var3ActionPerformed
        //for 3
        EnterNumber("3"); 
    }//GEN-LAST:event_var3ActionPerformed

    private void varmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varmodActionPerformed
        if(op.length()==0 && num1.length()>0) 
        {
            op = "%";
            display.setText(num1+op);
        }
    }//GEN-LAST:event_varmodActionPerformed

    private void var0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var0ActionPerformed
        //for 0 
        EnterNumber("0"); 
/// Note: when we call this func... EnterNumber func will take this "0" is its perameter s and keep it in num variable for getText() and show num in display by setText()
        
    }//GEN-LAST:event_var0ActionPerformed

    private void var1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var1ActionPerformed
        //for 1
        EnterNumber("1");
    }//GEN-LAST:event_var1ActionPerformed

    private void var2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var2ActionPerformed
        //for 2 
        EnterNumber("2");
    }//GEN-LAST:event_var2ActionPerformed

    private void var4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var4ActionPerformed
        //for 4 
        EnterNumber("4");
    }//GEN-LAST:event_var4ActionPerformed

    private void var5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var5ActionPerformed
        //for 5 
        EnterNumber("5");
    }//GEN-LAST:event_var5ActionPerformed

    private void var6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var6ActionPerformed
        //for 6
        EnterNumber("6");
    }//GEN-LAST:event_var6ActionPerformed

    private void var7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var7ActionPerformed
        //for 7 
        EnterNumber("7");
    }//GEN-LAST:event_var7ActionPerformed

    private void var8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var8ActionPerformed
        //for 8
        EnterNumber("8");
    }//GEN-LAST:event_var8ActionPerformed

    private void var9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_var9ActionPerformed
        //for 9 
        EnterNumber("9");
    }//GEN-LAST:event_var9ActionPerformed

    private void vardotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vardotActionPerformed
        
        if(op.length()>0 && (op.equals("sin")==true || op.equals("cos")==true || op.equals("tan")==true || op.equals("Â²")==true || op.equals("âˆš")==true))
        {
            if(num1.contains(".")==false) 
            {
                if(num1.length()==0) num1="0.";
                else num1 = num1 + ".";
                
                if(op.equals("âˆš")==true)
                {
                    display.setText("âˆš"+num1);
                }
                else if(op.equals("sin")==true)
                {
                    display.setText("sin("+num1+")");
                }
                else if(op.equals("tan")==true)
                {
                    display.setText("tan("+num1+")");
                }
                else if(op.equals("cos")==true)
                {
                    display.setText("cos("+num1+")");
                }
                else if(op.equals("Â²")==true)
                {
                    display.setText("("+num1 + ")Â²");
                }
            }
            
        }
        else if(op.length()>0)
        {
            if(num2.contains(".")==false)
            {
                if(num2.length()>0) num2 = num2 + ".";
                else num2 = "0.";
                display.setText(num1 + op + num2);
            }
        }
        else if(num1.contains(".")==false && op.length()==0)
        {
            if(num1.length()==0) num1 = "0.";
            else num1 = num1 + ".";
            display.setText(num1);
        }
    }//GEN-LAST:event_vardotActionPerformed

    private void varaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varaddActionPerformed
        if(op.length()==0 && num1.length()>0) 
        {
            op = "+";
            display.setText(num1+op);
        }
    }//GEN-LAST:event_varaddActionPerformed

    private void varsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varsubActionPerformed
        if(op.length()==0 && num1.length()>0) 
        {
            op = "-";
            display.setText(num1+op);
        }
    }//GEN-LAST:event_varsubActionPerformed

    private void varmulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varmulActionPerformed
        if(op.length()==0 && num1.length()>0) 
        {
            op = "*";
            display.setText(num1+op);
        }
    }//GEN-LAST:event_varmulActionPerformed

    private void vardivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vardivActionPerformed
        if(op.length()==0 && num1.length()>0) 
        {
            op = "/";
            display.setText(num1+op);
        }
    }//GEN-LAST:event_vardivActionPerformed

    private void varsqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varsqrtActionPerformed
        if(num1.length()==0 && op.length()==0)
        {
            op="âˆš";
            display.setText(op);
        }
        else if(op.length()==0)
        {
            op="âˆš";
            display.setText(op+num1);
        }
    }//GEN-LAST:event_varsqrtActionPerformed

    private void varsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varsinActionPerformed
        if(num1.length()==0 && op.length()==0)
        {
            op="sin";
            display.setText(op);
        }
        else if(op.length()==0)
        {
            op="sin";
            display.setText(op+"("+num1+")");
        }
    }//GEN-LAST:event_varsinActionPerformed

    private void varcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varcosActionPerformed
        if(num1.length()==0 && op.length()==0)
        {
            op="cos";
            display.setText(op);
        }
        else if(op.length()==0)
        {
            op="cos";
            display.setText(op+"("+num1+")");
        }
    }//GEN-LAST:event_varcosActionPerformed

    private void vartanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vartanActionPerformed
        if(num1.length()==0 && op.length()==0)
        {
            op="tan";
            display.setText(op);
        }
        else if(op.length()==0)
        {
            op="tan";
            display.setText(op+"("+num1+")");
        }
    }//GEN-LAST:event_vartanActionPerformed

    private void varpowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varpowActionPerformed
        if(num1.length()==0 && op.length()==0)
        {
            op="Â²";
            display.setText("()"+op);
        }
        else if(op.length()==0)
        {
            op="Â²";
            display.setText("("+num1+")"+op);
        }
    }//GEN-LAST:event_varpowActionPerformed

    private void varclrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varclrActionPerformed
        num1="";
        num2="";
        op="";
        res = "";
        display.setText("");
    }//GEN-LAST:event_varclrActionPerformed

    private void vardelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vardelActionPerformed

        if(num2.length()>0)
        {
            String box = "";
            for(int i=0 ; i<num2.length()-1 ; i++)
            {
                box = box + num2.charAt(i);
            }
            int index = num2.length();
            
            if(index==1) 
            {
                index = 0;
                num2 = "";
            }
            else
            {
                num2 = box;
                index-=1;
            }
            
            if(index>0 && num2.charAt(index-1)=='.') display.setText(num1 + op + num2 + "0");
            else display.setText(num1 + op + num2);
        }
        else if(op.length()>0 && num1.length()>0 && (op.equals("sin")==true || op.equals("cos")==true || op.equals("tan")==true || op.equals("Â²")==true || op.equals("âˆš")==true))
        {
            String box = "";
            for(int i=0 ; i<num1.length()-1 ; i++)
            {
                box = box + num1.charAt(i);
            }
            
            int index = num1.length();
            
            if(index==1) 
            {
                index = 0;
                num1 = "";
            }
            else
            {
                num1 = box;
                index-=1;
            }
            
            if(op.equals("âˆš")==true)
            {
                if(index>0 && num1.charAt(index-1)=='.') display.setText("âˆš"+num1 + "0");
                else display.setText("âˆš"+num1);
            }
            else if(op.equals("sin")==true)
            {
                if(index>0 && num1.charAt(index-1)=='.') display.setText("sin("+num1+"0)");
                else display.setText("sin("+num1+")");
            }
            else if(op.equals("tan")==true)
            {
                if(index>0 && num1.charAt(index-1)=='.') display.setText("tan("+num1+"0)");
                else display.setText("tan("+num1+")");
            }
            else if(op.equals("cos")==true)
            {
                if(index>0 && num1.charAt(index-1)=='.') display.setText("cos("+num1+"0)");
                else display.setText("cos("+num1+")");
            }
            else if(op.equals("Â²")==true)
            {
                if(index>0 && num1.charAt(index-1)=='.') display.setText("("+num1 + "0)Â²");
                else display.setText("("+num1+")Â²");
            }
        }
        else if(op.length()>0)
        {
            op = "";
            if(num1.length()>0) display.setText(num1);
            else display.setText("");
        }
        else if(num1.length()>0)
        {
            String box = "";
            for(int i=0 ; i<num1.length()-1 ; i++)
            {
                box = box + num1.charAt(i);
            }
            
            int index = num1.length();
            
            if(index==1) 
            {
                index = 0;
                num1 = "";
            }
            else
            {
                num1 = box;
                index-=1;
            }
            
            if(index>0 && num1.charAt(index-1)=='.') display.setText(num1 + "0");
            else display.setText(num1);
        }
    }//GEN-LAST:event_vardelActionPerformed

    private void varequActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varequActionPerformed
        
        if(op.equals("+")==true)
        {
            Double x = Double.parseDouble(num1);
            Double y = Double.parseDouble(num2);
            x = x + y;
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("-")==true)
        {
            Double x = Double.parseDouble(num1);
            Double y = Double.parseDouble(num2);
            x = x - y;
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("*")==true)
        {
            Double x = Double.parseDouble(num1);
            Double y = Double.parseDouble(num2);
            x = x * y;
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("%")==true)
        {
            Double x = Double.parseDouble(num1);
            Double y = Double.parseDouble(num2);
            if(y>0) x = x % y;
            
            res = x + "";
            if(y==0) res = "MATH ERROR";
            int pos = -1;
            String box = "";
            if(y!=0)
            {
                for(int i=0 ; i<res.length() ; i++)
                {
                    if(res.charAt(i)=='.')
                    {
                        pos = i+1;
                        break;
                    }
                    box = box + res.charAt(i);
                }
                int f = 0;
                for(int i=pos ; i<res.length() ; i++)
                {
                    if(res.charAt(i)!='0')
                    {
                        f++;
                        break;
                    }
                }

                if(f==0) res = box;
            }
            
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("/")==true)
        {
            Double x = Double.parseDouble(num1);
            Double y = Double.parseDouble(num2);
            if(y>0) x = x / y;
            
            res = x + "";
            if(y==0) res = "INF";
            int pos = -1;
            String box = "";
            int f = 0;
            if(y!=0)
            {
                for(int i=0 ; i<res.length() ; i++)
                {
                    if(res.charAt(i)=='.')
                    {
                        pos = i+1;
                        break;
                    }
                    box = box + res.charAt(i);
                }
                
                for(int i=pos ; i<res.length() ; i++)
                {
                    if(res.charAt(i)!='0')
                    {
                        f++;
                        break;
                    }
                }
                if(f==0) res = box;
            }
            
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("âˆš")==true)
        {
            Double x = Double.parseDouble(num1);
            
            if(x<0)
            {
                res = "MATH ERROR";
            }
            else
            {
                x = Math.sqrt(x);
                res = x + "";
                int pos = -1;
                String box = "";
                for(int i=0 ; i<res.length() ; i++)
                {
                    if(res.charAt(i)=='.')
                    {
                        pos = i+1;
                        break;
                    }
                    box = box + res.charAt(i);
                }
                int f = 0;
                for(int i=pos ; i<res.length() ; i++)
                {
                    if(res.charAt(i)!='0')
                    {
                        f++;
                        break;
                    }
                }

                if(f==0) res = box;
            }
            
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("Â²")==true)
        {
            Double x = Double.parseDouble(num1);
            x = Math.pow(x,2);
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("sin")==true)
        {
            Double x = Double.parseDouble(num1);
            x = Math.sin(x);
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("cos")==true)
        {
            Double x = Double.parseDouble(num1);
            x = Math.cos(x);
            res = x + "";
            int pos = -1;
            String box = "";
            for(int i=0 ; i<res.length() ; i++)
            {
                if(res.charAt(i)=='.')
                {
                    pos = i+1;
                    break;
                }
                box = box + res.charAt(i);
            }
            int f = 0;
            for(int i=pos ; i<res.length() ; i++)
            {
                if(res.charAt(i)!='0')
                {
                    f++;
                    break;
                }
            }
            
            if(f==0) res = box;
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        else if(op.equals("tan")==true)
        {
            Double x = Double.parseDouble(num1);
            if(x!=90) x = Math.tan(x);
            else res = "INF";
            
            int pos = -1;
            String box = "";
            if(x!=90)
            {
                res = x + "";
                for(int i=0 ; i<res.length() ; i++)
                {
                    if(res.charAt(i)=='.')
                    {
                        pos = i+1;
                        break;
                    }
                    box = box + res.charAt(i);
                }
                int f = 0;
                for(int i=pos ; i<res.length() ; i++)
                {
                    if(res.charAt(i)!='0')
                    {
                        f++;
                        break;
                    }
                }

                if(f==0) res = box;
            }
            if(res.equals("INT")==true || res.equals("MATH ERROR")==true ) num1="";
            else num1 = res;
            num2 = "";
            op = "";
            display.setText(res);
        }
        
        
        
    }//GEN-LAST:event_varequActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField display;
    private javax.swing.JButton var0;
    private javax.swing.JButton var1;
    private javax.swing.JButton var2;
    private javax.swing.JButton var3;
    private javax.swing.JButton var4;
    private javax.swing.JButton var5;
    private javax.swing.JButton var6;
    private javax.swing.JButton var7;
    private javax.swing.JButton var8;
    private javax.swing.JButton var9;
    private javax.swing.JButton varadd;
    private javax.swing.JButton varclr;
    private javax.swing.JButton varcos;
    private javax.swing.JButton vardel;
    private javax.swing.JButton vardiv;
    private javax.swing.JButton vardot;
    private javax.swing.JButton varequ;
    private javax.swing.JButton varmod;
    private javax.swing.JButton varmul;
    private javax.swing.JButton varpow;
    private javax.swing.JButton varsin;
    private javax.swing.JButton varsqrt;
    private javax.swing.JButton varsub;
    private javax.swing.JButton vartan;
    // End of variables declaration//GEN-END:variables
}
